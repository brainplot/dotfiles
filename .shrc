#!/bin/sh

GPG_TTY="$(tty)" && export GPG_TTY || unset GPG_TTY

case "$TERM" in
	xterm*|screen*|linux)
		export EDITOR=nvim
		;;
esac

case "$TERM" in
	xterm-*color|screen-*color|tmux-*color)
		export CLICOLOR=1
		;;
esac

# Misc aliases
alias la='ls -lhA'
alias ll='ls -lh'
alias ls='ls --color=auto'
alias grep='grep --color=auto'
alias tree="tree -I '.git|.hg|.svn'"
command -v batcat >/dev/null && alias bat=batcat

# Neovim aliases
alias nvimconfig="nvim -c 'edit \$MYVIMRC'"
alias nvimsync='nvim --headless "+Lazy! sync" +qa'

# Shell aliases
alias shconfig='"$EDITOR" "$HOME"/.shrc'
alias bashconfig='"$EDITOR" "$HOME"/.bashrc'
alias zshconfig='"$EDITOR" "$HOME"/.zshrc'

# Git aliases
alias dot='git --git-dir="$HOME/.dotfiles.git" --work-tree="$HOME"'
alias gitconfig='git config --global -e'

# Tmux aliases
alias t=tmux
alias tt='tmux new -s "$(basename "$PWD")"'
alias tmuxconfig='"$EDITOR" "$XDG_CONFIG_HOME"/tmux/tmux.conf'

# Python aliases
alias activate-venv='. ./.venv/bin/activate'
alias create-venv='python3 -m venv ./.venv'

# Disable blinking cursor if running in Windows Terminal
[ -n "$WT_SESSION" ] && printf '\e[2 q'

# Functions
source_aws_credentials_from_csv() {
	if [ "$#" -lt 1 ]
	then
		echo fatal: no CSV file provided >&2
	else
		eval "$(awk -F, 'FNR==2 { printf "export AWS_ACCESS_KEY_ID=%s AWS_SECRET_ACCESS_KEY=%s", $3, $4 }' "$1")"
	fi
}

renumber() {
	new_number="$(printf '%02d' "$2")"
	file_wo_number="${1#*.}"
	if [ "$1" != "$file_wo_number" ]
	then
		mv -v -- "$1" "$new_number"."$file_wo_number"
	fi
}

get_pwd_lowercase() {
	basename "$PWD" | LC_ALL=C tr '[:upper:]' '[:lower:]'
}

stop_dscourse_dev_server() {
	name="$(get_pwd_lowercase)"
	docker container stop "$name" >/dev/null
	docker container rm "$name" >/dev/null
}

start_dscourse_dev_server() {
	stop_dscourse_dev_server

	container_id="$(docker container run --detach \
	--restart unless-stopped \
	--init \
	-v "$PWD":/mkdocs/docs:ro \
	-p "$(dig +short localhost A)":"${1:-0}":80 \
	--name "$name" \
	dsdev)"

	echo "http://$(docker container port "$container_id" 80)"
}
